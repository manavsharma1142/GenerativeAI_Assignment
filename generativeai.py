# -*- coding: utf-8 -*-
"""GenerativeAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xSVgq7TaBu24X66cf37l6ptv0xXDEv-2
"""

!pip install fastapi uvicorn python-multipart pydantic
!pip install chromadb python-docx
!pip install sentence-transformers
!pip install aiofiles
!pip install pyPDF2

from fastapi import FastAPI, UploadFile, File
from fastapi.responses import JSONResponse
from sentence_transformers import SentenceTransformer
import chromadb
import os
import PyPDF2
import docx

app = FastAPI()
model = SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2')
client = chromadb.Client() # Initialize ChromaDB client
collection = client.create_collection("documents")

def read_file(file: UploadFile):
    if file.filename.endswith('.pdf'):
        reader = PyPDF2.PdfReader(file.file)
        text = ''
        for page in reader.pages:
            text += page.extract_text()
        return text
    elif file.filename.endswith('.docx'):
        doc = docx.Document(file.file)
        text = '\n'.join([para.text for para in doc.paragraphs])
        return text
    elif file.filename.endswith('.txt'):
        return file.file.read().decode('utf-8')
    else:
        return None

@app.post("/upload/")
async def upload_file(file: UploadFile = File(...)):
    text = read_file(file)
    if text:
        embedding = model.encode(text).tolist()
        collection.add(documents=[text], embeddings=[embedding], metadatas=[{"filename": file.filename}])
        return JSONResponse(content={"message": "File uploaded successfully."})
    else:
        return JSONResponse(content={"error": "Unsupported file type."}, status_code=400)

@app.get("/query/")
async def query_documents(query: str):
    query_embedding = model.encode(query).tolist()
    results = collection.query(embeddings=[query_embedding], n_results=5)
    return JSONResponse(content={"results": results})

!pip install pyngrok

# main.py
from fastapi import FastAPI
from pyngrok import ngrok

app = FastAPI()

# Set ngrok authentication token
ngrok.set_auth_token("2oVgnTH4yOBR3OS3kYOrJEkVxBU_2Dy3gSpRcXWQToFaKcGGM")

# Expose the FastAPI app
public_url = ngrok.connect(8000)
print(f"Public URL: {public_url}")

@app.get("/")
def read_root():
    return {"Hello": "World"}

# Run this in a separate cell or terminal if using Jupyter
# Run Uvicorn to start the FastAPI server
!uvicorn main:app --host 0.0.0.0 --port 8000





